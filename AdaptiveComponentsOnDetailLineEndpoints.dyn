{
  "Uuid": "27a38743-92e1-4e72-bf65-e2a74dc1826b",
  "IsCustomNode": false,
  "Description": null,
  "Name": "AdaptiveComponentsOnDetailLineEndpoints",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "ae8b4e75-e47d-473a-8255-a4634e701f79-000e776d",
        "ae8b4e75-e47d-473a-8255-a4634e701f79-000e776e",
        "ae8b4e75-e47d-473a-8255-a4634e701f79-000e776f",
        "ae8b4e75-e47d-473a-8255-a4634e701f79-000e7770",
        "ae8b4e75-e47d-473a-8255-a4634e701f79-000e7771",
        "ae8b4e75-e47d-473a-8255-a4634e701f79-000e7772",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d73d",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d73e",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d73f",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d740",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d74b",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d74c",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d74d",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d74e",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d759",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d75a",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d75b",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d75c",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d768",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d769",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d76a",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d76b",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d77b",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d77c",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d77d",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d77e",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d789",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d78a",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d78b",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d78c",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d79a",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d79b",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d79c",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d79d",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7aa",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7ab",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7ac",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7ad",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7bd",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7be",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7bf",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7c0",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7cc",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7cd",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7ce",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7cf",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7db",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7dc",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7dd",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7de",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7ec",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7ed",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7ee",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7ef",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d7ff",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d800",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d801",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d802",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d80d",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d80e",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d80f",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d810",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d81e",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d81f",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d820",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d821",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d871",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d872",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d873",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d874",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d875",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d876",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d877",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d878",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d879",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d87a",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d87b",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d87c",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d87d",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d87e",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d87f",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d880",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d881",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d882",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d883",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d884",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d885",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d886",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d887",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d888",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d889",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d88a",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d88b",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d88c",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d88d",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d88e",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d88f",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d890",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d891",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d892",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d893",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d894",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d895",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d896",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d897",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d898",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d899",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d89a",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d89b",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d89c",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d89d",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d89e",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d89f",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8a0",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8a1",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8a2",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8a3",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8a4",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8a5",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8a6",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8a7",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8a8",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8a9",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8aa",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8ab",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8ac",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8bc",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8bd",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8be",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8bf",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8c0",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8c1",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8c2",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8c3",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8c4",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8c5",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8c6",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8c7",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8c8",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8c9",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8ca",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8cb",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8cc",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8cd",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8ce",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8cf",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8d0",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8d1",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8d2",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8d3",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8d4",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8d5",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8d6",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8d7",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8d8",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8d9",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8da",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8db",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8dc",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8dd",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8de",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8df",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8e0",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8e1",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8e2",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8e3",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8e4",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8e5",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8e6",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8e7",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8e8",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8e9",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8ea",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8eb",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8ec",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8ed",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8ee",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8ef",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8f0",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8f1",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8f2",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8f3",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8f4",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8f5",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8f6",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8f7",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8f8",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8f9",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8fa",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8fb",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8fc",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8fd",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8fe",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d8ff",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d900",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d901",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d902",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d903",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d904",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d905",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d906",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d907",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d908",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d909",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d90a",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d90b",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d90c",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d90d",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d90e",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d90f",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d910",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d911",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d912",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d913",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d914",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d915",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d916",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d917",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d918",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d919",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d91a",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d91b",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d91c",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d91d",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d91e",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d91f",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d920",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d921",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d922",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d923",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d924",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d925",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d926",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d927",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d928",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d929",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d92a",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d92b",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d92c",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d92d",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d92e",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d92f",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d930",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d931",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d932",
        "7cc0eebe-de9e-42c6-b526-6790d4d7ca76-0010d933"
      ],
      "Id": "7ee8789233f34a759458ab4094d44490",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4841dc40fff647d2b2bdc891e806aa67",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nlineList = UnwrapElement(IN[0])\r\n\r\nfullPointList=[]\r\nfor x in lineList:\r\n\tpointList=[]\r\n\tpointList.append(x.StartPoint)\r\n\tpointList.append(x.EndPoint)\r\n\t\r\n\tfullPointList.append(pointList)\r\n\r\nfinishedList=[]\r\n\r\n\r\nwhile len(fullPointList) > 0:\r\n\r\n\tfor x in fullPointList:\r\n\t\tnew4PointList=[]\r\n\t\tnew4PointList.append(x)\r\n\t\tfullPointList.remove(x)\r\n\t\t\r\n\t\t\t\t\r\n\t\tfor y in fullPointList:\r\n\t\t\r\n\t\t\tif new4PointList[0][0].ToString() == y[0].ToString() or new4PointList[0][0].ToString() == y[1].ToString() or new4PointList[0][1].ToString() == y[0].ToString() or new4PointList[0][1].ToString() == y[1].ToString():\r\n\t\t\t\tnew4PointList.append(y)\r\n\t\t\t\tfullPointList.remove(y)\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tfor z in fullPointList:\r\n\t\t\t\t\r\n\t\t\t\t\tif new4PointList[-1][0].ToString() == z[0].ToString() or new4PointList[-1][0].ToString() == z[1].ToString() or new4PointList[-1][1].ToString() == z[0].ToString() or new4PointList[-1][1].ToString() == z[1].ToString():\r\n\t\t\t\t\t\tnew4PointList.append(z)\r\n\t\t\t\t\t\tfullPointList.remove(z)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor a in fullPointList:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif new4PointList[-1][0].ToString() == a[0].ToString() or new4PointList[-1][0].ToString() == a[1].ToString() or new4PointList[-1][1].ToString() == a[0].ToString() or new4PointList[-1][1].ToString() == a[1].ToString():\r\n\t\t\t\t\t\t\t\tnew4PointList.append(a)\r\n\t\t\t\t\t\t\t\tfinishedList.append(new4PointList)\r\n\t\t\t\t\t\t\t\tfullPointList.remove(a)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\r\nOUT = finishedList",
      "VariableInputPorts": true,
      "Id": "a36560af75c24b06b51f6dce8764c6d8",
      "Inputs": [
        {
          "Id": "5735a004556148498665133aae84ff71",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d4d1f339f984df3952f4404fe6ce0ca",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "adb54640cb72409ead9dd002e58409bb",
      "Inputs": [
        {
          "Id": "39f916b2c23c4c86887cc4a0c82d4878",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fbd3e9d05ab04aa89a4c559fbc2a4b2a",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9d300c8033ac4da286b1256b08346d50",
      "Inputs": [
        {
          "Id": "b20ee46f10474d2b96079aa8dad80bfd",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61a033edb38442e59b5598c1f7db9825",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfc59077f0b4408da6fb8b311427cfc0",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "e28c1f9f7c254d9e887e76ecfdb06571",
      "Inputs": [
        {
          "Id": "ffdbff6141cc40459e047f842f0ecfd9",
          "Name": "list",
          "Description": "The list of items to be sorted.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e8d1c6e8c85474e9a2fc17036f54c32",
          "Name": "newList",
          "Description": "The indices of the items in the sorted list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.AdaptiveComponent.ByPoints@Autodesk.DesignScript.Geometry.Point[][],Revit.Elements.FamilyType",
      "Id": "5c68a1ea1c14404fb0a6f679bd06cbf0",
      "Inputs": [
        {
          "Id": "5e0dc973b3c14a11b55ecf36b27e6948",
          "Name": "points",
          "Description": "a two-dimensional array of points\n\nPoint[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c4eb75a524c4ee29bef81699b96ee30",
          "Name": "familyType",
          "Description": "a family type to use to create the adaptive components\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05bc4093670642d5916517fe378e990b",
          "Name": "AdaptiveComponent[]..[]",
          "Description": "AdaptiveComponent[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a list of adaptive components from two-dimensional array of points\n\nAdaptiveComponent.ByPoints (points: Point[][], familyType: FamilyType): AdaptiveComponent[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 13,
      "SelectedString": "Family1:Family1",
      "NodeType": "ExtensionNode",
      "Id": "ef5263b8a9204f23a4d543f0621bd7ad",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b431e12af3c344af980b3a8000460671",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All family types available in the document."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nlineList = UnwrapElement(IN[0])\r\n\r\nfullPointList=[]\r\nfor x in lineList:\r\n\tpointList=[]\r\n\tpointList.append(x.StartPoint)\r\n\tpointList.append(x.EndPoint)\r\n\t\r\n\tfullPointList.append(pointList)\r\n\r\nfinishedList=[]\r\n\r\n\r\nwhile len(fullPointList) > 0:\r\n\r\n\tfor x in fullPointList:\r\n\t\tnew4PointList=[]\r\n\t\tnew4PointList.append(x[0])\r\n\t\tfullPointList.remove(x)\r\n\t\t\r\n\t\t\t\t\r\n\t\tfor y in fullPointList:\r\n\t\t\r\n\t\t\tif new4PointList[0].ToString() == y[0].ToString():\r\n\t\t\t\tnew4PointList.append(y[1])\r\n\t\t\t\tfullPointList.remove(y)\r\n\r\n\t\t\t\tfor z in fullPointList:\r\n\t\t\t\t\r\n\t\t\t\t\tif new4PointList[-1].ToString() == z[0].ToString():\r\n\t\t\t\t\t\tnew4PointList.append(z[1])\r\n\t\t\t\t\t\tfullPointList.remove(z)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor a in fullPointList:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif new4PointList[-1].ToString() == a[0].ToString():\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tnew4PointList.append(a[1])\r\n\t\t\t\t\t\t\t\tfinishedList.append(new4PointList)\r\n\t\t\t\t\t\t\t\tfullPointList.remove(a)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\telif new4PointList[-1].ToString() == a[1].ToString():\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tnew4PointList.append(a[0])\r\n\t\t\t\t\t\t\t\tfinishedList.append(new4PointList)\r\n\t\t\t\t\t\t\t\tfullPointList.remove(a)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\telif new4PointList[-1].ToString() == z[1].ToString():\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tnew4PointList.append(z[0])\r\n\t\t\t\t\t\tfullPointList.remove(z)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor a in fullPointList:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif new4PointList[-1].ToString() == a[0].ToString():\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tnew4PointList.append(a[1])\r\n\t\t\t\t\t\t\t\tfinishedList.append(new4PointList)\r\n\t\t\t\t\t\t\t\tfullPointList.remove(a)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\telif new4PointList[-1].ToString() == a[1].ToString():\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tnew4PointList.append(a[0])\r\n\t\t\t\t\t\t\t\tfinishedList.append(new4PointList)\r\n\t\t\t\t\t\t\t\tfullPointList.remove(a)\r\n\t\t\t\t\t\t\t\t####\r\n\t\t\t\t\t\t\t\t\r\n\t\t\telif new4PointList[0].ToString() == y[1].ToString():\r\n\t\t\t\tnew4PointList.append(y[0])\r\n\t\t\t\tfullPointList.remove(y)\r\n\r\n\t\t\t\tfor z in fullPointList:\r\n\t\t\t\t\r\n\t\t\t\t\tif new4PointList[-1].ToString() == z[0].ToString():\r\n\t\t\t\t\t\tnew4PointList.append(z[1])\r\n\t\t\t\t\t\tfullPointList.remove(z)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor a in fullPointList:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif new4PointList[-1].ToString() == a[0].ToString():\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tnew4PointList.append(a[1])\r\n\t\t\t\t\t\t\t\tfinishedList.append(new4PointList)\r\n\t\t\t\t\t\t\t\tfullPointList.remove(a)\r\n\t\t\t\t\t\t\telif new4PointList[-1].ToString() == a[1].ToString():\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tnew4PointList.append(a[0])\r\n\t\t\t\t\t\t\t\tfinishedList.append(new4PointList)\r\n\t\t\t\t\t\t\t\tfullPointList.remove(a)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\telif new4PointList[-1].ToString() == z[1].ToString():\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tnew4PointList.append(z[0])\r\n\t\t\t\t\t\tfullPointList.remove(z)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor a in fullPointList:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif new4PointList[-1].ToString() == a[0].ToString():\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tnew4PointList.append(a[1])\r\n\t\t\t\t\t\t\t\tfinishedList.append(new4PointList)\r\n\t\t\t\t\t\t\t\tfullPointList.remove(a)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\telif new4PointList[-1].ToString() == a[1].ToString():\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tnew4PointList.append(a[0])\r\n\t\t\t\t\t\t\t\tfinishedList.append(new4PointList)\r\n\t\t\t\t\t\t\t\tfullPointList.remove(a)\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\r\nOUT = finishedList",
      "VariableInputPorts": true,
      "Id": "4fee198d6c584d229a313401e021a2d5",
      "Inputs": [
        {
          "Id": "f06c7a3a63434406a60125c91ac9507e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3645ede7bfae41f1ad630ee8401441b9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    }
  ],
  "Connectors": [
    {
      "Start": "4841dc40fff647d2b2bdc891e806aa67",
      "End": "39f916b2c23c4c86887cc4a0c82d4878",
      "Id": "97ac917333ab4075bb47f8cc03588cb2"
    },
    {
      "Start": "fbd3e9d05ab04aa89a4c559fbc2a4b2a",
      "End": "b20ee46f10474d2b96079aa8dad80bfd",
      "Id": "012f1125e48a496d84ebbaa522f9f2a3"
    },
    {
      "Start": "bfc59077f0b4408da6fb8b311427cfc0",
      "End": "ffdbff6141cc40459e047f842f0ecfd9",
      "Id": "3d5acec9c7844490b644a7a53868d190"
    },
    {
      "Start": "4e8d1c6e8c85474e9a2fc17036f54c32",
      "End": "5735a004556148498665133aae84ff71",
      "Id": "3de4c48f35d049f5a5d6025aebd5e61a"
    },
    {
      "Start": "4e8d1c6e8c85474e9a2fc17036f54c32",
      "End": "f06c7a3a63434406a60125c91ac9507e",
      "Id": "f097a8c47f2b435a8ad8b11a24f1cc1e"
    },
    {
      "Start": "b431e12af3c344af980b3a8000460671",
      "End": "2c4eb75a524c4ee29bef81699b96ee30",
      "Id": "9a983a1349ce47069b120d0e39f5d42f"
    },
    {
      "Start": "3645ede7bfae41f1ad630ee8401441b9",
      "End": "5e0dc973b3c14a11b55ecf36b27e6948",
      "Id": "80c491ce86484eaf80c74f3fbec9c44c"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [
    {
      "NodeId": "5c68a1ea-1c14-404f-b0a6-f679bd06cbf0",
      "Binding": {
        "ByPoints_InClassDecl-1_InFunctionScope-1_Instance0_5c68a1ea-1c14-404f-b0a6-f679bd06cbf0": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Select Model Elements",
        "Id": "7ee8789233f34a759458ab4094d44490",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1727.3548624736982,
        "Y": 47.048779721658832
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "a36560af75c24b06b51f6dce8764c6d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 3272.3548624736982,
        "Y": 9.54877972165886
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Geometry",
        "Id": "adb54640cb72409ead9dd002e58409bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2096.3548624736982,
        "Y": 47.04877972165886
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "9d300c8033ac4da286b1256b08346d50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2393.3548624736982,
        "Y": 47.04877972165886
      },
      {
        "ShowGeometry": true,
        "Name": "List.Sort",
        "Id": "e28c1f9f7c254d9e887e76ecfdb06571",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2679.3548624736982,
        "Y": 47.04877972165886
      },
      {
        "ShowGeometry": true,
        "Name": "AdaptiveComponent.ByPoints",
        "Id": "5c68a1ea1c14404fb0a6f679bd06cbf0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3262.3548624736982,
        "Y": 133.54877972165886
      },
      {
        "ShowGeometry": true,
        "Name": "Family Types",
        "Id": "ef5263b8a9204f23a4d543f0621bd7ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2961.3548624736982,
        "Y": 208.54877972165886
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "4fee198d6c584d229a313401e021a2d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2971.3548624736982,
        "Y": 84.54877972165886
      }
    ],
    "Annotations": [
      {
        "Id": "794595b8b4104cafb9d0b83374bb2b55",
        "Title": "New",
        "Nodes": [
          "4fee198d6c584d229a313401e021a2d5"
        ],
        "Left": 2961.3548624736982,
        "Top": 31.54877972165886,
        "Width": 144.0,
        "Height": 146.0,
        "FontSize": 36.0,
        "InitialTop": 84.54877972165886,
        "InitialHeight": 123.0,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3b82de9506064cbb8ecc89538832d9be",
        "Title": "Old version",
        "Nodes": [
          "a36560af75c24b06b51f6dce8764c6d8"
        ],
        "Left": 3262.3548624736982,
        "Top": -86.45122027834114,
        "Width": 144.0,
        "Height": 189.0,
        "FontSize": 36.0,
        "InitialTop": 9.54877972165886,
        "InitialHeight": 123.0,
        "TextblockHeight": 86.0,
        "Background": "#FFFF7BAC"
      }
    ],
    "X": -1105.3539426199129,
    "Y": 223.60525629511562,
    "Zoom": 0.71902200481235656
  }
}